import { Logger } from "@nestjs/common"
import { Client } from "pg"
import * as bcrypt from "bcrypt"
import Config from "src/constants"

const client = new Client({
  host: Config.DB_HOST,
  database: Config.DB_DATABASE,
  port: +Config.DB_PORT,
  user: Config.DB_USER,
  password: Config.DB_PASSWORD,
})

const defaultEmail = Config.DEFAULT_EMAIL
const defaultPassword = bcrypt.hashSync(Config.DEFAULT_PASSWORD, bcrypt.genSaltSync(10))

const query = `
  CREATE TABLE IF NOT EXISTS clients (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(200) NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    modified_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    PRIMARY KEY (id)
  );

  INSERT INTO clients(email, password)
  VALUES ('${defaultEmail}', '${defaultPassword}')
  ON CONFLICT (email) DO NOTHING;

  CREATE TABLE IF NOT EXISTS cars (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    vin VARCHAR(17) NOT NULL,
    model VARCHAR(50) NOT NULL,
    license_plate VARCHAR(20) NOT NULL,
    fuel_level INT DEFAULT 0,
    position JSONB NOT NULL,
    client_id INT NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    modified_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    PRIMARY KEY (id),
    CONSTRAINT fk_client FOREIGN KEY(client_id) REFERENCES clients(id)
  );
`;

export async function execute() {
  try {
    await client.connect()
    await client.query(query)
    Logger.log('Database tables generated', 'Database')
  } catch(err) {
    Logger.error('Database tables generation failed', 'Database')
    console.log(err)
  } finally {
    await client.end()
  }
}
